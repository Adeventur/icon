// mojom-webui/chrome/browser/new_tab_page/modules/task_module/task_module.mojom-webui.js is auto generated by mojom_bindings_generator.py, do not edit
// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
import { mojo } from '//resources/mojo/mojo/public/js/bindings.js';
import { UrlSpec as url_mojom_UrlSpec } from 'chrome://resources/mojo/url/mojom/url.mojom-webui.js';
/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class TaskModuleHandlerPendingReceiver {
    /**
     * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
     */
    constructor(handle) {
        /** @public {!mojo.internal.interfaceSupport.Endpoint} */
        this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
    }
    /** @param {string=} scope */
    bindInBrowser(scope = 'context') {
        mojo.internal.interfaceSupport.bind(this.handle, 'task_module.mojom.TaskModuleHandler', scope);
    }
}
/** @interface */
export class TaskModuleHandlerInterface {
    /**
     * @return {!Promise<{
          task: ?Task,
     *  }>}
     */
    getPrimaryTask() { }
    /**
     * @param { !string } taskName
     */
    dismissTask(taskName) { }
    /**
     * @param { !string } taskName
     */
    restoreTask(taskName) { }
    /**
     * @param { !number } index
     */
    onTaskItemClicked(index) { }
    /**
     * @param { !number } index
     */
    onRelatedSearchClicked(index) { }
}
/**
 * @implements { TaskModuleHandlerInterface }
 */
export class TaskModuleHandlerRemote {
    /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
    constructor(handle = undefined) {
        /**
         * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!TaskModuleHandlerPendingReceiver>}
         */
        this.proxy =
            new mojo.internal.interfaceSupport.InterfaceRemoteBase(TaskModuleHandlerPendingReceiver, handle);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!TaskModuleHandlerPendingReceiver>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
    }
    /**
     * @return {!Promise<{
          task: ?Task,
     *  }>}
     */
    getPrimaryTask() {
        return this.proxy.sendMessage(740705997, TaskModuleHandler_GetPrimaryTask_ParamsSpec.$, TaskModuleHandler_GetPrimaryTask_ResponseParamsSpec.$, []);
    }
    /**
     * @param { !string } taskName
     */
    dismissTask(taskName) {
        this.proxy.sendMessage(2130615063, TaskModuleHandler_DismissTask_ParamsSpec.$, null, [
            taskName
        ]);
    }
    /**
     * @param { !string } taskName
     */
    restoreTask(taskName) {
        this.proxy.sendMessage(28328874, TaskModuleHandler_RestoreTask_ParamsSpec.$, null, [
            taskName
        ]);
    }
    /**
     * @param { !number } index
     */
    onTaskItemClicked(index) {
        this.proxy.sendMessage(1914127319, TaskModuleHandler_OnTaskItemClicked_ParamsSpec.$, null, [
            index
        ]);
    }
    /**
     * @param { !number } index
     */
    onRelatedSearchClicked(index) {
        this.proxy.sendMessage(1698564990, TaskModuleHandler_OnRelatedSearchClicked_ParamsSpec.$, null, [
            index
        ]);
    }
}
/**
 * An object which receives request messages for the TaskModuleHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class TaskModuleHandlerReceiver {
    /**
     * @param {!TaskModuleHandlerInterface } impl
     */
    constructor(impl) {
        /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!TaskModuleHandlerRemote>} */
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(TaskModuleHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TaskModuleHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.helper_internal_.registerHandler(740705997, TaskModuleHandler_GetPrimaryTask_ParamsSpec.$, TaskModuleHandler_GetPrimaryTask_ResponseParamsSpec.$, impl.getPrimaryTask.bind(impl));
        this.helper_internal_.registerHandler(2130615063, TaskModuleHandler_DismissTask_ParamsSpec.$, null, impl.dismissTask.bind(impl));
        this.helper_internal_.registerHandler(28328874, TaskModuleHandler_RestoreTask_ParamsSpec.$, null, impl.restoreTask.bind(impl));
        this.helper_internal_.registerHandler(1914127319, TaskModuleHandler_OnTaskItemClicked_ParamsSpec.$, null, impl.onTaskItemClicked.bind(impl));
        this.helper_internal_.registerHandler(1698564990, TaskModuleHandler_OnRelatedSearchClicked_ParamsSpec.$, null, impl.onRelatedSearchClicked.bind(impl));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
}
export class TaskModuleHandler {
    /**
     * @return {!string}
     */
    static get $interfaceName() {
        return "task_module.mojom.TaskModuleHandler";
    }
    /**
     * Returns a remote for this interface which sends messages to the browser.
     * The browser must have an interface request binder registered for this
     * interface and accessible to the calling document's frame.
     *
     * @return {!TaskModuleHandlerRemote}
     */
    static getRemote() {
        let remote = new TaskModuleHandlerRemote;
        remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
        return remote;
    }
}
/**
 * An object which receives request messages for the TaskModuleHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class TaskModuleHandlerCallbackRouter {
    constructor() {
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(TaskModuleHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!TaskModuleHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getPrimaryTask =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(740705997, TaskModuleHandler_GetPrimaryTask_ParamsSpec.$, TaskModuleHandler_GetPrimaryTask_ResponseParamsSpec.$, this.getPrimaryTask.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.dismissTask =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(2130615063, TaskModuleHandler_DismissTask_ParamsSpec.$, null, this.dismissTask.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.restoreTask =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(28328874, TaskModuleHandler_RestoreTask_ParamsSpec.$, null, this.restoreTask.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.onTaskItemClicked =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1914127319, TaskModuleHandler_OnTaskItemClicked_ParamsSpec.$, null, this.onTaskItemClicked.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.onRelatedSearchClicked =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1698564990, TaskModuleHandler_OnRelatedSearchClicked_ParamsSpec.$, null, this.onRelatedSearchClicked.createReceiverHandler(false /* expectsResponse */));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
    /**
     * @param {number} id An ID returned by a prior call to addListener.
     * @return {boolean} True iff the identified listener was found and removed.
     */
    removeListener(id) {
        return this.router_.removeListener(id);
    }
}
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskItemSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const RelatedSearchSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_GetPrimaryTask_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_GetPrimaryTask_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_DismissTask_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_RestoreTask_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_OnTaskItemClicked_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const TaskModuleHandler_OnRelatedSearchClicked_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
mojo.internal.Struct(TaskItemSpec.$, 'TaskItem', [
    mojo.internal.StructField('name', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('imageUrl', 8, 0, url_mojom_UrlSpec.$, null, false /* nullable */, 0),
    mojo.internal.StructField('price', 16, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('info', 24, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('siteName', 32, 0, mojo.internal.String, null, true /* nullable */, 0),
    mojo.internal.StructField('targetUrl', 40, 0, url_mojom_UrlSpec.$, null, false /* nullable */, 0),
], [[0, 56],]);
/**
 * @record
 */
export class TaskItem {
    constructor() {
        /** @type { !string } */
        this.name;
        /** @type { !url_mojom_Url } */
        this.imageUrl;
        /** @type { (string|undefined) } */
        this.price;
        /** @type { !string } */
        this.info;
        /** @type { (string|undefined) } */
        this.siteName;
        /** @type { !url_mojom_Url } */
        this.targetUrl;
    }
}
mojo.internal.Struct(RelatedSearchSpec.$, 'RelatedSearch', [
    mojo.internal.StructField('text', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('targetUrl', 8, 0, url_mojom_UrlSpec.$, null, false /* nullable */, 0),
], [[0, 24],]);
/**
 * @record
 */
export class RelatedSearch {
    constructor() {
        /** @type { !string } */
        this.text;
        /** @type { !url_mojom_Url } */
        this.targetUrl;
    }
}
mojo.internal.Struct(TaskSpec.$, 'Task', [
    mojo.internal.StructField('title', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('name', 8, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('taskItems', 16, 0, mojo.internal.Array(TaskItemSpec.$, false), null, false /* nullable */, 0),
    mojo.internal.StructField('relatedSearches', 24, 0, mojo.internal.Array(RelatedSearchSpec.$, false), null, false /* nullable */, 0),
], [[0, 40],]);
/**
 * @record
 */
export class Task {
    constructor() {
        /** @type { !string } */
        this.title;
        /** @type { !string } */
        this.name;
        /** @type { !Array<!TaskItem> } */
        this.taskItems;
        /** @type { !Array<!RelatedSearch> } */
        this.relatedSearches;
    }
}
mojo.internal.Struct(TaskModuleHandler_GetPrimaryTask_ParamsSpec.$, 'TaskModuleHandler_GetPrimaryTask_Params', [], [[0, 8],]);
/**
 * @record
 */
export class TaskModuleHandler_GetPrimaryTask_Params {
    constructor() {
    }
}
mojo.internal.Struct(TaskModuleHandler_GetPrimaryTask_ResponseParamsSpec.$, 'TaskModuleHandler_GetPrimaryTask_ResponseParams', [
    mojo.internal.StructField('task', 0, 0, TaskSpec.$, null, true /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class TaskModuleHandler_GetPrimaryTask_ResponseParams {
    constructor() {
        /** @type { (Task|undefined) } */
        this.task;
    }
}
mojo.internal.Struct(TaskModuleHandler_DismissTask_ParamsSpec.$, 'TaskModuleHandler_DismissTask_Params', [
    mojo.internal.StructField('taskName', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class TaskModuleHandler_DismissTask_Params {
    constructor() {
        /** @type { !string } */
        this.taskName;
    }
}
mojo.internal.Struct(TaskModuleHandler_RestoreTask_ParamsSpec.$, 'TaskModuleHandler_RestoreTask_Params', [
    mojo.internal.StructField('taskName', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class TaskModuleHandler_RestoreTask_Params {
    constructor() {
        /** @type { !string } */
        this.taskName;
    }
}
mojo.internal.Struct(TaskModuleHandler_OnTaskItemClicked_ParamsSpec.$, 'TaskModuleHandler_OnTaskItemClicked_Params', [
    mojo.internal.StructField('index', 0, 0, mojo.internal.Uint32, 0, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class TaskModuleHandler_OnTaskItemClicked_Params {
    constructor() {
        /** @type { !number } */
        this.index;
    }
}
mojo.internal.Struct(TaskModuleHandler_OnRelatedSearchClicked_ParamsSpec.$, 'TaskModuleHandler_OnRelatedSearchClicked_Params', [
    mojo.internal.StructField('index', 0, 0, mojo.internal.Uint32, 0, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class TaskModuleHandler_OnRelatedSearchClicked_Params {
    constructor() {
        /** @type { !number } */
        this.index;
    }
}
