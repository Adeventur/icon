// mojom-webui/chrome/browser/new_tab_page/modules/drive/drive.mojom-webui.js is auto generated by mojom_bindings_generator.py, do not edit
// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
import { mojo } from '//resources/mojo/mojo/public/js/bindings.js';
import { UrlSpec as url_mojom_UrlSpec } from 'chrome://resources/mojo/url/mojom/url.mojom-webui.js';
/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 */
export class DriveHandlerPendingReceiver {
    /**
     * @param {!MojoHandle|!mojo.internal.interfaceSupport.Endpoint} handle
     */
    constructor(handle) {
        /** @public {!mojo.internal.interfaceSupport.Endpoint} */
        this.handle = mojo.internal.interfaceSupport.getEndpointForReceiver(handle);
    }
    /** @param {string=} scope */
    bindInBrowser(scope = 'context') {
        mojo.internal.interfaceSupport.bind(this.handle, 'drive.mojom.DriveHandler', scope);
    }
}
/** @interface */
export class DriveHandlerInterface {
    /**
     * @return {!Promise<{
          files: !Array<!File>,
     *  }>}
     */
    getFiles() { }
    /**
     */
    dismissModule() { }
    /**
     */
    restoreModule() { }
}
/**
 * @implements { DriveHandlerInterface }
 */
export class DriveHandlerRemote {
    /** @param {MojoHandle|mojo.internal.interfaceSupport.Endpoint=} handle */
    constructor(handle = undefined) {
        /**
         * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!DriveHandlerPendingReceiver>}
         */
        this.proxy =
            new mojo.internal.interfaceSupport.InterfaceRemoteBase(DriveHandlerPendingReceiver, handle);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!DriveHandlerPendingReceiver>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
    }
    /**
     * @return {!Promise<{
          files: !Array<!File>,
     *  }>}
     */
    getFiles() {
        return this.proxy.sendMessage(1788566069, DriveHandler_GetFiles_ParamsSpec.$, DriveHandler_GetFiles_ResponseParamsSpec.$, []);
    }
    /**
     */
    dismissModule() {
        this.proxy.sendMessage(973851557, DriveHandler_DismissModule_ParamsSpec.$, null, []);
    }
    /**
     */
    restoreModule() {
        this.proxy.sendMessage(1149881812, DriveHandler_RestoreModule_ParamsSpec.$, null, []);
    }
}
/**
 * An object which receives request messages for the DriveHandler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 */
export class DriveHandlerReceiver {
    /**
     * @param {!DriveHandlerInterface } impl
     */
    constructor(impl) {
        /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!DriveHandlerRemote>} */
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(DriveHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DriveHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.helper_internal_.registerHandler(1788566069, DriveHandler_GetFiles_ParamsSpec.$, DriveHandler_GetFiles_ResponseParamsSpec.$, impl.getFiles.bind(impl));
        this.helper_internal_.registerHandler(973851557, DriveHandler_DismissModule_ParamsSpec.$, null, impl.dismissModule.bind(impl));
        this.helper_internal_.registerHandler(1149881812, DriveHandler_RestoreModule_ParamsSpec.$, null, impl.restoreModule.bind(impl));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
}
export class DriveHandler {
    /**
     * @return {!string}
     */
    static get $interfaceName() {
        return "drive.mojom.DriveHandler";
    }
    /**
     * Returns a remote for this interface which sends messages to the browser.
     * The browser must have an interface request binder registered for this
     * interface and accessible to the calling document's frame.
     *
     * @return {!DriveHandlerRemote}
     */
    static getRemote() {
        let remote = new DriveHandlerRemote;
        remote.$.bindNewPipeAndPassReceiver().bindInBrowser();
        return remote;
    }
}
/**
 * An object which receives request messages for the DriveHandler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 */
export class DriveHandlerCallbackRouter {
    constructor() {
        this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(DriveHandlerRemote);
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!DriveHandlerRemote>}
         */
        this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);
        this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.getFiles =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1788566069, DriveHandler_GetFiles_ParamsSpec.$, DriveHandler_GetFiles_ResponseParamsSpec.$, this.getFiles.createReceiverHandler(true /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.dismissModule =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(973851557, DriveHandler_DismissModule_ParamsSpec.$, null, this.dismissModule.createReceiverHandler(false /* expectsResponse */));
        /**
         * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
         */
        this.restoreModule =
            new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(this.router_);
        this.helper_internal_.registerHandler(1149881812, DriveHandler_RestoreModule_ParamsSpec.$, null, this.restoreModule.createReceiverHandler(false /* expectsResponse */));
        /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
        this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
    }
    /**
     * @param {number} id An ID returned by a prior call to addListener.
     * @return {boolean} True iff the identified listener was found and removed.
     */
    removeListener(id) {
        return this.router_.removeListener(id);
    }
}
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const FileSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DriveHandler_GetFiles_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DriveHandler_GetFiles_ResponseParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DriveHandler_DismissModule_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const DriveHandler_RestoreModule_ParamsSpec = { $: /** @type {!mojo.internal.MojomType} */ ({}) };
mojo.internal.Struct(FileSpec.$, 'File', [
    mojo.internal.StructField('id', 0, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('justificationText', 8, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('mimeType', 16, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('title', 24, 0, mojo.internal.String, null, false /* nullable */, 0),
    mojo.internal.StructField('itemUrl', 32, 0, url_mojom_UrlSpec.$, null, false /* nullable */, 0),
], [[0, 48],]);
/**
 * @record
 */
export class File {
    constructor() {
        /** @type { !string } */
        this.id;
        /** @type { !string } */
        this.justificationText;
        /** @type { !string } */
        this.mimeType;
        /** @type { !string } */
        this.title;
        /** @type { !url_mojom_Url } */
        this.itemUrl;
    }
}
mojo.internal.Struct(DriveHandler_GetFiles_ParamsSpec.$, 'DriveHandler_GetFiles_Params', [], [[0, 8],]);
/**
 * @record
 */
export class DriveHandler_GetFiles_Params {
    constructor() {
    }
}
mojo.internal.Struct(DriveHandler_GetFiles_ResponseParamsSpec.$, 'DriveHandler_GetFiles_ResponseParams', [
    mojo.internal.StructField('files', 0, 0, mojo.internal.Array(FileSpec.$, false), null, false /* nullable */, 0),
], [[0, 16],]);
/**
 * @record
 */
export class DriveHandler_GetFiles_ResponseParams {
    constructor() {
        /** @type { !Array<!File> } */
        this.files;
    }
}
mojo.internal.Struct(DriveHandler_DismissModule_ParamsSpec.$, 'DriveHandler_DismissModule_Params', [], [[0, 8],]);
/**
 * @record
 */
export class DriveHandler_DismissModule_Params {
    constructor() {
    }
}
mojo.internal.Struct(DriveHandler_RestoreModule_ParamsSpec.$, 'DriveHandler_RestoreModule_Params', [], [[0, 8],]);
/**
 * @record
 */
export class DriveHandler_RestoreModule_Params {
    constructor() {
    }
}
